{"version":3,"sources":["html.sortable.angular.js"],"names":["angular","module","directive","$timeout","$parse","require","link","scope","element","attrs","ngModel","opts","model","scallback","noop","htmlSortableCallback","extend","$eval","htmlSortable","sortable","$render","$watch","bind","e","data","$source","startparent","attr","$dest","endparent","$sourceModel","$destModel","$start","oldindex","$end","item","index","$apply","$items","splice","assign","$item","$sourceItems","$destItems","startModel","destModel","start","end"],"mappings":"CAUE,SAASA,GACT,YAEAA,GAAQC,OAAO,mBACZC,UAAU,gBACT,WAAY,SAAU,SAASC,EAAUC,GACvC,OACEC,QAAS,WAETC,KAAM,SAASC,EAAOC,EAASC,EAAOC,GACpC,GAAIC,GACAC,EACAC,EAAYb,EAAQc,IAEpBL,GAAMM,uBACRF,EAAYT,EAAOK,EAAMM,uBAG3BJ,EAAOX,EAAQgB,UAAWT,EAAMU,MAAMR,EAAMS,eAC5CV,EAAQW,SAASR,GAEbD,IACFE,EAAQR,EAAOK,EAAMC,SAErBA,EAAQU,QAAU,WAChBjB,EAAS,WACPK,EAAQW,SAAS,WAChB,KAGLZ,EAAMc,OAAOT,EAAO,WAClBT,EAAS,WACPK,EAAQW,SAAS,WAChB,MACF,GAEHX,EAAQW,WAAWG,KAAK,aAAc,SAASC,EAAGC,GAChD,GAAIC,GAAUD,EAAKE,YAAYC,KAAK,YAChCC,EAAUJ,EAAKK,UAAUF,KAAK,YAE9BG,EAAe1B,EAAOqB,GACtBM,EAAa3B,EAAOwB,GAEpBI,EAASR,EAAKS,SACdC,EAASV,EAAKW,KAAKC,OAEvB7B,GAAM8B,OAAO,WAGX,GAAIP,EAAaN,EAAKE,YAAYnB,WAAawB,EAAWP,EAAKK,UAAUtB,SAAU,CAEjF,GAAI+B,GAASR,EAAaN,EAAKE,YAAYnB,QAC3C+B,GAAOC,OAAOL,EAAM,EAAGI,EAAOC,OAAOP,EAAQ,GAAG,IAChDF,EAAaU,OAAOjC,EAAO+B,OACtB,CACL,GAAIG,GAAQX,EAAaN,EAAKE,YAAYnB,SAASyB,GAC/CU,EAAeZ,EAAaN,EAAKE,YAAYnB,SAC7CoC,EAAaZ,EAAWP,EAAKK,UAAUtB,YAE3CmC,GAAaH,OAAOP,EAAQ,GAC5BW,EAAWJ,OAAOL,EAAM,EAAGO,GAE3BX,EAAaU,OAAOjC,EAAOmC,GAC3BX,EAAWS,OAAOjC,EAAOoC,MAI7B9B,EAAUN,GACRqC,WAAYd,EAAaN,EAAKE,YAAYnB,SAC1CsC,UAAWd,EAAWP,EAAKK,UAAUtB,SACrCuC,MAAOd,EACPe,IAAKb,aAQrBlC","file":"html.sortable.angular.min.js","sourcesContent":["/*\n * AngularJS integration with the HTML5 Sortable jQuery Plugin\n * https://github.com/voidberg/html5sortable\n *\n * Copyright 2013, Alexandru Badiu <andu@ctrlz.ro>\n *\n * Thanks to the following contributors: samantp.\n *\n * Released under the MIT license.\n */\n;(function(angular) {\n  'use strict';\n\n  angular.module('htmlSortable', [])\n    .directive('htmlSortable', [\n      '$timeout', '$parse', function($timeout, $parse) {\n        return {\n          require: '?ngModel',\n          // TODO: fix this, if you know angular\n          link: function(scope, element, attrs, ngModel) { // jshint ignore:line\n            var opts;\n            var model;\n            var scallback = angular.noop;\n\n            if (attrs.htmlSortableCallback) {\n              scallback = $parse(attrs.htmlSortableCallback);\n            }\n\n            opts = angular.extend({}, scope.$eval(attrs.htmlSortable));\n            element.sortable(opts);\n\n            if (ngModel) {\n              model = $parse(attrs.ngModel);\n\n              ngModel.$render = function() {\n                $timeout(function() {\n                  element.sortable('reload');\n                }, 50);\n              };\n\n              scope.$watch(model, function() {\n                $timeout(function() {\n                  element.sortable('reload');\n                }, 50);\n              }, true);\n\n              element.sortable().bind('sortupdate', function(e, data) {\n                var $source = data.startparent.attr('ng-model');\n                var $dest   = data.endparent.attr('ng-model');\n\n                var $sourceModel = $parse($source);\n                var $destModel = $parse($dest);\n\n                var $start = data.oldindex;\n                var $end   = data.item.index();\n\n                scope.$apply(function() {\n                  // TODO: fix this, if you know angular\n                  //jscs:disable\n                  if ($sourceModel(data.startparent.scope()) === $destModel(data.endparent.scope())) {\n                    //jscs:enable\n                    var $items = $sourceModel(data.startparent.scope());\n                    $items.splice($end, 0, $items.splice($start, 1)[0]);\n                    $sourceModel.assign(scope, $items);\n                  } else {\n                    var $item = $sourceModel(data.startparent.scope())[$start];\n                    var $sourceItems = $sourceModel(data.startparent.scope());\n                    var $destItems = $destModel(data.endparent.scope()) || [];\n\n                    $sourceItems.splice($start, 1);\n                    $destItems.splice($end, 0, $item);\n\n                    $sourceModel.assign(scope, $sourceItems);\n                    $destModel.assign(scope, $destItems);\n                  }\n                });\n\n                scallback(scope, {\n                  startModel: $sourceModel(data.startparent.scope()),\n                  destModel: $destModel(data.endparent.scope()),\n                  start: $start,\n                  end: $end\n                });\n              });\n            }\n          }\n        };\n      }\n    ]);\n}(angular));\n"],"sourceRoot":"/source/"}